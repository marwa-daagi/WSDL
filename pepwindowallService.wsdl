<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://www.dkfz-heidelberg.de/menu/tomcat/as/protein_composition.pepwindowall" xmlns:intf="http://www.dkfz-heidelberg.de/menu/tomcat/as/protein_composition.pepwindowall" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/protein_composition.pepwindowall">
  <wsdl:types>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.dkfz-heidelberg.de/menu/tomcat/as/protein_composition.pepwindowall">
      <xsd:annotation>
        <xsd:documentation>Displays protein hydropathy of a set of
                  sequences</xsd:documentation>
      </xsd:annotation>
      <element name="runAndWaitFor">
        <complexType>
          <sequence>
            <element name="pepwindowall" type="impl:Tpepwindowall"/>
          </sequence>
        </complexType>
      </element>
      <simpleType name="TpepwindowallSequencesSformat">
        <restriction base="xsd:string">
          <enumeration value="gcg"/>
          <enumeration value="gcg8"/>
          <enumeration value="embl"/>
          <enumeration value="swiss"/>
          <enumeration value="fasta"/>
          <enumeration value="ncbi"/>
          <enumeration value="genbank"/>
          <enumeration value="nbrf"/>
          <enumeration value="pir"/>
          <enumeration value="codata"/>
          <enumeration value="strider"/>
          <enumeration value="clustal"/>
          <enumeration value="phylip"/>
          <enumeration value="acedb"/>
          <enumeration value="msf"/>
          <enumeration value="jackknifer"/>
          <enumeration value="jackknifernon"/>
          <enumeration value="nexus"/>
          <enumeration value="nexusnon"/>
          <enumeration value="treecon"/>
          <enumeration value="mega"/>
          <enumeration value="meganon"/>
          <enumeration value="ig"/>
          <enumeration value="staden"/>
          <enumeration value="text"/>
          <enumeration value="raw"/>
        </restriction>
      </simpleType>
      <complexType name="TpepwindowallSequences">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="sequences_direct_data" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="sequences_usa" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="sformat" type="impl:TpepwindowallSequencesSformat"/>
          <element maxOccurs="1" minOccurs="0" name="sbegin" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="send" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="sprotein" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="snucleotide" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="sreverse" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="slower" type="xsd:boolean"/>
          <element maxOccurs="1" minOccurs="0" name="supper" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <simpleType name="TpepwindowallGraph_format">
        <restriction base="xsd:string">
          <enumeration value="png"/>
          <enumeration value="postscript"/>
          <enumeration value="colourps"/>
          <enumeration value="hpgl"/>
        </restriction>
      </simpleType>
      <complexType name="TpepwindowallDatafile">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="datafile_direct_data" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="datafile_url" type="xsd:string"/>
        </sequence>
      </complexType>
      <complexType name="Tpepwindowall">
        <sequence>
          <element name="sequences" type="impl:TpepwindowallSequences">
            <xsd:annotation>
              <xsd:documentation>qualifiers for parameter: sequences</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="graph_format" type="impl:TpepwindowallGraph_format">
            <xsd:annotation>
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Format of the graphical output</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Format of the graphical output</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="datafile" type="impl:TpepwindowallDatafile">
            <xsd:annotation>
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Aaindex database file</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Aaindex database file</xsd:documentation>
            </xsd:annotation>
          </element>
          <element maxOccurs="1" minOccurs="0" name="length" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo xmlns:emboss="http://emboss.sourceforge.net/schema/prompt">
                <emboss:prompt>Window size</emboss:prompt>
              </xsd:appinfo>
              <xsd:documentation>Window size</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <element name="runAndWaitForResponse">
        <complexType>
          <sequence>
            <element name="pepwindowallResult" type="impl:TpepwindowallResult"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="TpepwindowallResultGraphics_container">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="Graphics" type="xsd:base64Binary"/>
          <element maxOccurs="1" minOccurs="0" name="Graphics_in_Postscript" type="xsd:string"/>
          <element maxOccurs="unbounded" minOccurs="0" name="Graphics_in_PNG" type="xsd:base64Binary"/>
        </sequence>
      </complexType>
      <complexType name="TpepwindowallResult">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="report" type="xsd:string"/>
          <element maxOccurs="1" minOccurs="0" name="detailed_status" type="xsd:long"/>
          <element maxOccurs="1" minOccurs="0" name="Graphics_container" type="impl:TpepwindowallResultGraphics_container">
            <xsd:annotation>
              <xsd:documentation>graphics output data</xsd:documentation>
            </xsd:annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="TSoaplabException">
        <sequence/>
      </complexType>
      <element name="fault" type="impl:TSoaplabException"/>
      <element name="createAndRun">
        <complexType>
          <sequence>
            <element name="pepwindowall" type="impl:Tpepwindowall"/>
          </sequence>
        </complexType>
      </element>
      <element name="createAndRunResponse">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="waitFor">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="waitForResponse">
        <complexType/>
      </element>
      <element name="getStatus">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="getStatusResponse">
        <complexType>
          <sequence>
            <element name="status" type="impl:Tstatus"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="Tstatus">
        <sequence>
          <element name="inProgress" type="xsd:boolean"/>
          <element name="detailed" type="xsd:string"/>
          <element name="erroneous" type="xsd:boolean"/>
          <element name="description" type="xsd:string"/>
          <element name="completed" type="xsd:boolean"/>
          <element name="asString" type="xsd:string"/>
          <element name="successful" type="xsd:boolean"/>
        </sequence>
      </complexType>
      <element name="getResults">
        <complexType>
          <sequence>
            <element name="jobid" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>
      <element name="getResultsResponse">
        <complexType>
          <sequence>
            <element name="pepwindowallResult" type="impl:TpepwindowallResult"/>
          </sequence>
        </complexType>
      </element>
    </schema>
  </wsdl:types>
  <wsdl:message name="getResultsRequest">
    <wsdl:part element="impl:getResults" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waitForResponse">
    <wsdl:part element="impl:waitForResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForResponse">
    <wsdl:part element="impl:runAndWaitForResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
    <wsdl:part element="impl:getStatusResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStatusRequest">
    <wsdl:part element="impl:getStatus" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="waitForRequest">
    <wsdl:part element="impl:waitFor" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAndRunRequest">
    <wsdl:part element="impl:createAndRun" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getResultsResponse">
    <wsdl:part element="impl:getResultsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAndRunResponse">
    <wsdl:part element="impl:createAndRunResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SoaplabException">
    <wsdl:part element="impl:fault" name="fault"/>
  </wsdl:message>
  <wsdl:message name="runAndWaitForRequest">
    <wsdl:part element="impl:runAndWaitFor" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="protein_composition__pepwindowall">
    <wsdl:operation name="runAndWaitFor">
      <wsdl:documentation>Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
      <wsdl:input message="impl:runAndWaitForRequest" name="runAndWaitForRequest"/>
      <wsdl:output message="impl:runAndWaitForResponse" name="runAndWaitForResponse"/>
      <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="createAndRun">
      <wsdl:documentation>Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
      <wsdl:input message="impl:createAndRunRequest" name="createAndRunRequest"/>
      <wsdl:output message="impl:createAndRunResponse" name="createAndRunResponse"/>
      <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="waitFor">
      <wsdl:documentation>Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
      <wsdl:input message="impl:waitForRequest" name="waitForRequest"/>
      <wsdl:output message="impl:waitForResponse" name="waitForResponse"/>
      <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:documentation>Get status information about a running job. Returns immediately.</wsdl:documentation>
      <wsdl:input message="impl:getStatusRequest" name="getStatusRequest"/>
      <wsdl:output message="impl:getStatusResponse" name="getStatusResponse"/>
      <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
    </wsdl:operation>
    <wsdl:operation name="getResults">
      <wsdl:documentation>Get the results of a job (by job-id)</wsdl:documentation>
      <wsdl:input message="impl:getResultsRequest" name="getResultsRequest"/>
      <wsdl:output message="impl:getResultsResponse" name="getResultsResponse"/>
      <wsdl:fault message="impl:SoaplabException" name="SoaplabException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="protein_composition.pepwindowall.derivedSoapBinding" type="impl:protein_composition__pepwindowall">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="runAndWaitFor">
      <wsdl:documentation>Start the web service and receive the result. Blocks until job is finished.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="runAndWaitForRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="runAndWaitForResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAndRun">
      <wsdl:documentation>Start the web service and receive a job-id. Returns immediately.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createAndRunRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAndRunResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="waitFor">
      <wsdl:documentation>Wait until a job (by job-id) has finished. Blocks until job is finished.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="waitForRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="waitForResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:documentation>Get status information about a running job. Returns immediately.</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getStatusRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResults">
      <wsdl:documentation>Get the results of a job (by job-id)</wsdl:documentation>
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getResultsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResultsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoaplabException">
        <wsdlsoap:fault name="SoaplabException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="pepwindowallService">
    <wsdl:port binding="impl:protein_composition.pepwindowall.derivedSoapBinding" name="protein_composition.pepwindowall.derived">
      <wsdlsoap:address location="http://www.dkfz-heidelberg.de/menu/tomcat/as/protein_composition.pepwindowall.derived"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>